{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOn1hWBudkOZZyNHDgAbKQg"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"id":"DPR7Z3QVnxjg","executionInfo":{"status":"ok","timestamp":1702547827059,"user_tz":-540,"elapsed":311,"user":{"displayName":"이상민","userId":"04090776648633214483"}}},"outputs":[],"source":["# 아이리스 dataset 을 활용/ 앙상블 학습을 진행하겠다.\n","from sklearn.datasets import load_iris\n","from sklearn.ensemble import RandomForestClassifier,VotingClassifier\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.svm import SVC\n","from sklearn.metrics import accuracy_score\n","from sklearn.model_selection import train_test_split\n","\n","# 데이터셋 로드\n","iris = load_iris()\n","X = iris.data[:,2:] # 데이터들 중 꽃잎의 길이, 너비 가져오겠다.\n","Y = iris.target\n","\n","# 학습, 검증용 데이터를 분류하는 작업을 실시한다.\n","# shuffle = True -> index 의 순서를 섞어줘서 일반화 성능을 높이기 위함이다.\n","# 섞어서 분류한다고 생각하면 편함.\n","x_train, x_test, y_train, y_test = train_test_split(X,Y,test_size=0.3,random_state=2021,shuffle=True)"]},{"cell_type":"code","source":["# 약한 학습기 구축 - 서로 독립적인 모델들을 만들어준다.\n","log_model = LogisticRegression()\n","rnd_model = RandomForestClassifier()\n","svm_model = SVC()"],"metadata":{"id":"mWg5ePLpoe4j","executionInfo":{"status":"ok","timestamp":1702547828132,"user_tz":-540,"elapsed":565,"user":{"displayName":"이상민","userId":"04090776648633214483"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["# 앙상블 모델 구축\n","# 만약에 모든 모델이 predict_proba() 메서드가 있으면, 예측의 평균을 내어 soft voting(간접 투표)도 할수 있다.\n","# 간접 투표 방식은 확률이 높은 투표에 비중을 두기 때문에 성능이 더 높다. (voting='soft' 사용)\n","# svc는 기본적으로 predict_proba를 제공하지 않아, probability = True 지정 해야 사용 가능\n","# 대신 svc에서 probability = True를 지정하면 교차 검증을 사용해서 확률을 추정하기 때문에 훈련 속도 느려짐\n","# 대신 성능을 올라감\n","\n","# hard voting model 생성\n","voting_model = VotingClassifier(\n","    estimators=[('lr',log_model),\n","                ('rf',rnd_model),\n","                ('svc',svm_model)], # 3개의 약한 학습기\n","                voting='hard' # 직접 투표(hard voting)\n",")"],"metadata":{"id":"5FSuvetBogjH","executionInfo":{"status":"ok","timestamp":1702547828487,"user_tz":-540,"elapsed":2,"user":{"displayName":"이상민","userId":"04090776648633214483"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["# 앙상블 모델 학습\n","voting_model.fit(x_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":111},"id":"rfr7PhEToiri","executionInfo":{"status":"ok","timestamp":1702547830192,"user_tz":-540,"elapsed":784,"user":{"displayName":"이상민","userId":"04090776648633214483"}},"outputId":"9f122ff1-2e7c-4695-836e-efcb98094609"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["VotingClassifier(estimators=[('lr', LogisticRegression()),\n","                             ('rf', RandomForestClassifier()), ('svc', SVC())])"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>VotingClassifier(estimators=[(&#x27;lr&#x27;, LogisticRegression()),\n","                             (&#x27;rf&#x27;, RandomForestClassifier()), (&#x27;svc&#x27;, SVC())])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">VotingClassifier</label><div class=\"sk-toggleable__content\"><pre>VotingClassifier(estimators=[(&#x27;lr&#x27;, LogisticRegression()),\n","                             (&#x27;rf&#x27;, RandomForestClassifier()), (&#x27;svc&#x27;, SVC())])</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><label>lr</label></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><label>rf</label></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><label>svc</label></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC()</pre></div></div></div></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["# 모델 비교\n","for model in (log_model,rnd_model,svm_model,voting_model):\n","  model.fit(x_train,y_train)\n","  y_pred = model.predict(x_test)\n","\n","  # 모델 클래스마다 정확도 지표를 도출한다.\n","  print(model.__class__.__name__,\" : \",accuracy_score(y_test,y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1Rh9bFMFokHh","executionInfo":{"status":"ok","timestamp":1702547831763,"user_tz":-540,"elapsed":1573,"user":{"displayName":"이상민","userId":"04090776648633214483"}},"outputId":"bd384ada-b0a2-4489-a30a-911dcb6fa9d6"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["LogisticRegression  :  1.0\n","RandomForestClassifier  :  0.9555555555555556\n","SVC  :  1.0\n","VotingClassifier  :  1.0\n"]}]},{"cell_type":"code","source":["# 사이킷런에서 배깅과 페이스팅을 진행\n","from sklearn.ensemble import BaggingClassifier\n","from sklearn.tree import DecisionTreeClassifier\n","\n","# 모델 구축\n","# BaggingClassifier에서 사용한 분류기가 클래스 확률추정(predict_proba)이 가능하면 자동으로 간접 투표 사용\n","bag_model = BaggingClassifier(\n","    DecisionTreeClassifier(), # 약한 학습기(결정 트리)\n","    n_estimators = 500, # 약한 학습기(결정 트리) 500개 생성 -> 랜덤포레스트라는 소리\n","    max_samples = 0.05, # 0.0 ~ 1.0 사이 실수 선택(실수 x 샘플 수) 혹은 샘플수 지정\n","    bootstrap = True, # True : 배깅, False : 페이스팅\n","    n_jobs = -1 # 훈련과 예측에 사용할 CPU 코어 수 (-1 : 가용한 모든 코어 사용)\n",")\n","\n","# 모델 학습\n","bag_model.fit(x_train,y_train)\n","\n","# 모델 예측\n","y_pred = bag_model.predict(x_test)\n","\n","# 모델 평가, 모델의 이름과 함께 가져오겠다.\n","print(bag_model.__class__.__name__,\" : \",accuracy_score(y_test,y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hq7TWNXhwc76","executionInfo":{"status":"ok","timestamp":1702547838556,"user_tz":-540,"elapsed":6795,"user":{"displayName":"이상민","userId":"04090776648633214483"}},"outputId":"d78a2fe2-c9d2-4c57-b1c2-1331ccca5b61"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["BaggingClassifier  :  0.9555555555555556\n"]}]},{"cell_type":"code","source":["# oob 평가 모델 구축\n","bag_model = BaggingClassifier(\n","    base_estimator = DecisionTreeClassifier(),\n","    n_estimators = 500,\n","    bootstrap = True,\n","    n_jobs = -1,\n","    oob_score = True # oob평가를 위해 True를 지정한다.\n",")\n","\n","# 모델 학습\n","bag_model.fit(x_train,y_train)\n","\n","# 모델 평가(oob_score_)\n","print('oob_score : ',bag_model.oob_score_)\n","\n","# 모델 평가\n","y_pred = bag_model.predict(x_test)\n","print('test_score : ',accuracy_score(y_test,y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"awVDIF_8y7Fz","executionInfo":{"status":"ok","timestamp":1702548461694,"user_tz":-540,"elapsed":4172,"user":{"displayName":"이상민","userId":"04090776648633214483"}},"outputId":"439f10f4-6e47-4653-ca1f-75f302bc2970"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/ensemble/_base.py:166: FutureWarning: `base_estimator` was renamed to `estimator` in version 1.2 and will be removed in 1.4.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["oob_score :  0.9523809523809523\n","test_score :  0.9333333333333333\n"]}]},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestClassifier\n","\n","# 랜덤포레스트 모델 구축\n","rnd_model = RandomForestClassifier(\n","    n_estimators = 500, # 예측기 500개\n","    max_leaf_nodes = 16, # 자식노드의 최대 개수, 트리에 대한 규제가 가능하다.\n","    n_jobs = -1 # CPU 코어 구동 개수\n",")\n","\n","# 모델 학습\n","rnd_model.fit(x_train,y_train)\n","\n","# 모델 예측\n","y_pred_rf = rnd_model.predict(x_test)\n","\n","# 모델 평가\n","print(\"rnd_model : \",accuracy_score(y_pred_rf,y_test))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nuLqIRLp0K7U","executionInfo":{"status":"ok","timestamp":1702548784179,"user_tz":-540,"elapsed":2781,"user":{"displayName":"이상민","userId":"04090776648633214483"}},"outputId":"819c5eeb-5ae0-4125-a417-8ac3391e5055"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["rnd_model :  0.9555555555555556\n"]}]},{"cell_type":"code","source":["# 랜덤포레스트 모델 특성 중요도 확인하기\n","# 데이터셋 정의\n","x = iris.data[:,:]\n","y = iris.target\n","\n","# 모델 구축\n","rnd_model = RandomForestClassifier(\n","    n_estimators = 500,\n","    n_jobs = -1\n",")\n","\n","# 모델 학습\n","rnd_model.fit(x,y)\n","\n","# 특성 중요도 확인 (전체 특성 중요도 합 : 1)\n","# 특성이름: 중요도를 반환\n","for feature_name,feature_imp in zip(iris['feature_names'],rnd_model.feature_importances_):\n","  print(feature_name,' : ',feature_imp)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nhrVx2rL0LvG","executionInfo":{"status":"ok","timestamp":1702549018497,"user_tz":-540,"elapsed":2470,"user":{"displayName":"이상민","userId":"04090776648633214483"}},"outputId":"5df1f643-25ae-48c2-ddba-74cae458d575"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["sepal length (cm)  :  0.09670533919015686\n","sepal width (cm)  :  0.025340109272878122\n","petal length (cm)  :  0.45001924354617107\n","petal width (cm)  :  0.42793530799079393\n"]}]},{"cell_type":"code","source":["# 아다부스트 모델 구축\n","from sklearn.ensemble import AdaBoostClassifier\n","from sklearn.tree import DecisionTreeClassifier\n","\n","# 아다부스트의 학습기 : Decision Tree (max_depth =1) 사용\n","# SAMME(Stagewise Additive Modeling using a Multiclass Exponential loss function) 알고리즘 사용\n","# 스텝을 고려하면서 추가적으로 모델링을 진행해준다. 두 개 이상의 클래스에서 손실함수를 사용해준다.\n","ada_model = AdaBoostClassifier(\n","    DecisionTreeClassifier(max_depth=1),\n","    n_estimators = 200, # 학습기 개수(n_estimators) : 200개\n","    algorithm = 'SAMME.R', # 기본 학습기가 확률 추정(predict_proba)이 가능하면 SAMME.R 사용 -> 일반적으로 성능이 더 좋음\n","    learning_rate=0.5 # 학습률\n",")\n","\n","# 모델 학습\n","ada_model.fit(x,y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":118},"id":"Epnpr-mH0MGm","executionInfo":{"status":"ok","timestamp":1702550040361,"user_tz":-540,"elapsed":1108,"user":{"displayName":"이상민","userId":"04090776648633214483"}},"outputId":"cae42b9e-dd39-4c06-add4-04665a73a023"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["AdaBoostClassifier(estimator=DecisionTreeClassifier(max_depth=1),\n","                   learning_rate=0.5, n_estimators=200)"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>AdaBoostClassifier(estimator=DecisionTreeClassifier(max_depth=1),\n","                   learning_rate=0.5, n_estimators=200)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" ><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">AdaBoostClassifier</label><div class=\"sk-toggleable__content\"><pre>AdaBoostClassifier(estimator=DecisionTreeClassifier(max_depth=1),\n","                   learning_rate=0.5, n_estimators=200)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" ><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier(max_depth=1)</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" ><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier(max_depth=1)</pre></div></div></div></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["# 그래디언트 부스팅\n","from sklearn.tree import DecisionTreeRegressor\n","\n","# 결정트리(max_depth=3) 모델 구축 및 학습\n","tree_reg_model_1 = DecisionTreeRegressor(max_depth=3)\n","tree_reg_model_1.fit(x,y)\n","\n","# 첫 번째 학습기에서 발생한 잔차를 목적함수로 모델 학습\n","residual_1 = y - tree_reg_model_1.predict(x)\n","tree_reg_model_2 = DecisionTreeRegressor(max_depth=3)\n","# 잔차를 예측하는 모델\n","tree_reg_model_2.fit(x,residual_1)\n","\n","# 두 번째 학습기에서 발생한 잔차를 목적함수로 모델 학습\n","residual_2 = y - tree_reg_model_2.predict(x)\n","tree_reg_model_3 = DecisionTreeRegressor(max_depth=3)\n","# 잔차를 예측하는 모델\n","tree_reg_model_3.fit(x,residual_2)\n","\n","# 예측한 것에 대해서 보정에 보정을 한 것이다.\n","# 새로운 데이터를 세 개의 트리를 포함한 앙상블 모델로 예측\n","x_new = [[1.4 ,0.2, 1, 0]]\n","prediction = sum(tree.predict(x_new) for tree in [tree_reg_model_1,tree_reg_model_2,tree_reg_model_3])\n","prediction"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e9aXHQKl5rsw","executionInfo":{"status":"ok","timestamp":1702551023342,"user_tz":-540,"elapsed":296,"user":{"displayName":"이상민","userId":"04090776648633214483"}},"outputId":"3710cdb1-4199-4929-e5cf-3a60b0b256ea"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.])"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["# 사이킷런에서 제공하는 GBRT(그래디언트 부스팅의 회귀문제) 앙상블을 다음과 같이 간단하게 훈련시킬 수 있다.\n","from sklearn.ensemble import GradientBoostingRegressor\n","\n","# GBRT 모형 구축\n","# GBRT 앙상블 모형도 마찬가지로 n_estimators, max_depth, min_samples_leaf 등을 통해 모델 규제가 가능하다.\n","# 추가적으로 learning_rate가 각 트리의 기여 정도를 조절한다.\n","# learning_rate가 0.1보다 낮게 설정되면 훈련을 위한 트리가 더 많이 필요하지만 성능은 좋아진다.\n","# 이러한 방식을 축소(shrinkage)라고 부르는 규제 방법이다.\n","gbrt = GradientBoostingRegressor(max_depth = 3,\n","                                 n_estimators = 3,\n","                                 learning_rate = 1)\n","\n","# GBRT 모형 학습\n","gbrt.fit(x,y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"lwsuaKT87RPn","executionInfo":{"status":"ok","timestamp":1702550685647,"user_tz":-540,"elapsed":333,"user":{"displayName":"이상민","userId":"04090776648633214483"}},"outputId":"9e0f18fc-1768-45cf-a7c5-3baa680adb9b"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GradientBoostingRegressor(learning_rate=1, n_estimators=3)"],"text/html":["<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GradientBoostingRegressor(learning_rate=1, n_estimators=3)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-8\" type=\"checkbox\" checked><label for=\"sk-estimator-id-8\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GradientBoostingRegressor</label><div class=\"sk-toggleable__content\"><pre>GradientBoostingRegressor(learning_rate=1, n_estimators=3)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["# 최적의 estimators수를 찾기 위한 간단한 방법\n","import numpy as np\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import mean_squared_error\n","\n","# train set과 validation set을 8:2로 분리\n","x_train, x_val, y_train, y_val = train_test_split(x,y,test_size=0.2)\n","\n","# GBRT(max_depth=3,예측기 수=120) 모형 구축\n","gbrt = GradientBoostingRegressor(max_depth=3, n_estimators=120)\n","\n","# GBRT 모형 학습\n","gbrt.fit(x_train,y_train)\n","\n","# staged_predict를 활용하여 훈련 각 단계에서 앙상블에 의해 만들어진 예측을 반복자로 반환, mse 값을 하나씩 쌓는 방식\n","errors = [mean_squared_error(y_val,y_pred) for y_pred in gbrt.staged_predict(x_val)]\n","\n","# validation 검증 결과에서 가장 좋은 성능을 보인 예측기 수를 추출\n","bst_estimators_num = np.argmin(errors)\n","\n","# 최고의 일반화 성능을 가진 하이퍼파라미터(n_estimators)를 가지고 재 모델 구축\n","print(\"best_est_num : \",bst_estimators_num)\n","gbrt_best = GradientBoostingRegressor(max_depth=3,n_estimators=bst_estimators_num)\n","\n","# 데이터셋(train + valid)를 가지고 학습\n","gbrt_best.fit(x,y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":93},"id":"vNXRq4U27fJO","executionInfo":{"status":"ok","timestamp":1702550709907,"user_tz":-540,"elapsed":392,"user":{"displayName":"이상민","userId":"04090776648633214483"}},"outputId":"e2095a52-b3de-4079-83d2-92a63fa7f008"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["best_est_num :  25\n"]},{"output_type":"execute_result","data":{"text/plain":["GradientBoostingRegressor(n_estimators=25)"],"text/html":["<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GradientBoostingRegressor(n_estimators=25)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-9\" type=\"checkbox\" checked><label for=\"sk-estimator-id-9\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GradientBoostingRegressor</label><div class=\"sk-toggleable__content\"><pre>GradientBoostingRegressor(n_estimators=25)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["# 조기종료(early stopping)를 활용한 모델 -> 과적합을 피하기 위함\n","# warm_start : fit 메서드 호출될 때마다 기존 트리 유지 및 훈련 추가할 수 있게 해줌\n","# subsample : 각 트리는 무작위로 선택된 25% 훈련 샘플로 학습(배깅 방법) => 편향 상승 => 분산 감소 => 훈련 속도 상승\n","# 위 subsample 방법을 \"확률적 그래디언트 부스팅\"이라 부른다.\n","gbrt = GradientBoostingRegressor(max_depth=3, warm_start=True,subsample=0.25)\n","\n","min_val_error = float('inf')\n","error_going_up = 0\n","best_estimator = 0\n","\n","for n_estimators in range(1,120):\n","  gbrt.n_estimators = n_estimators\n","  gbrt.fit(x_train,y_train)\n","  y_pred = gbrt.predict(x_val)\n","  val_error = mean_squared_error(y_val, y_pred)\n","\n","  # val 셋을 계속 비교하면서 학습의 방향을 파악하는 것이라고 보면 된다.\n","  if val_error < min_val_error:\n","    min_val_error = val_error\n","    best_estimator = n_estimators\n","    error_going_up = 0\n","  else:\n","    error_going_up += 1 # 성능 향상이 되지 않을 때마다 +1\n","    if error_going_up == 5:\n","      break # 성능 향상 연속 5회 : 조기 종료"],"metadata":{"id":"Np_16nT67ih_","executionInfo":{"status":"ok","timestamp":1702550726461,"user_tz":-540,"elapsed":259,"user":{"displayName":"이상민","userId":"04090776648633214483"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"UfTIERbO7kkT"},"execution_count":null,"outputs":[]}]}